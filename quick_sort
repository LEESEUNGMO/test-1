include <stdio.h>
#include <stdlib.h>
#define SWAP(x, y, t) ((t) = (x), (x) = (y), (y) = (t))

int partion(int list[], int left, int right) //do{}를 실행하고 while()가 true면 반복실행, while()가 false면 구문 탈출
{
	int pivot, temp;
	int low, high;

	low = left;
	high = right + 1;
	pivot = list[left];
	do {
		do {
			low++;
		} while (low <= right && list[low] < pivot);
		do {
		high--;
		} while (high >= left && list[high] > pivot);
		if (low < high) { 
			SWAP(list[low], list[high], temp); 
		}
	} while (low < high);

	SWAP(list[left], list[high], temp);
	printf("pivot : %d\n", high + 1);
	return high;
}

void quick_sort(int list[], int left, int right)
{
	if (left < right) {
		int q = partion(list, left, right);
		for (int i = 0; i < 9; i++) {
			printf("%d ", list[i]);
		}printf("\n\n");
		quick_sort(list, left, q - 1);
		quick_sort(list, q + 1, right);
	}
}

int main() {
	int list[] = { 5, 3, 8, 4, 9, 1, 6, 2, 7 };
	int size = 9;

	quick_sort(list, 0, size - 1);

	for (int i = 0; i < size; i++) {
		printf("%d ", list[i]);
	}
	return 0;
}
